// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST tests brace.svelte ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "color: {color1}",
      "file": "/brace.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "color: {color2}",
      "file": "/brace.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "color: {color3}",
      "file": "/brace.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "color: {color4}",
      "file": "/brace.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "input {
	color: red;
}
",
      "file": "/brace.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "<script>
	let color1 = '#f00';
	let color2 = '#0f0';
	let color3 = '#00f';
	let color4 = '#ff0';
	let value
</script>
<input class:over-100={value > 100} bind:value={value} style=\\"color: {color1}\\">
<input class:over-100={  ((value > 100) )  } bind:value={value} style=\\"color: {color2}\\">
<input class={ \`\${(value > 100) ? 'foo' : 'bar'}\`  } style=\\"color: {color3}\\">
<input class={ {foo: (value > 100) ? 'foo' : 'bar'}.foo  } style=\\"color: {color4}\\">

<style>
input {
	color: red;
}
</style>
",
      "file": "/brace.svelte",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 77,
              "line": 8,
              "offset": 195,
            },
            "inputId": 0,
            "start": Object {
              "column": 63,
              "line": 8,
              "offset": 180,
            },
          },
          "type": "decl",
          "value": "{color1}",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "<script>
	let color1 = '#f00';
	let color2 = '#0f0';
	let color3 = '#00f';
	let color4 = '#ff0';
	let value
</script>
<input class:over-100={value > 100} bind:value={value} style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 63,
          "line": 8,
          "offset": 180,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 86,
              "line": 9,
              "offset": 284,
            },
            "inputId": 0,
            "start": Object {
              "column": 72,
              "line": 9,
              "offset": 269,
            },
          },
          "type": "decl",
          "value": "{color2}",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
<input class:over-100={  ((value > 100) )  } bind:value={value} style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 72,
          "line": 9,
          "offset": 269,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 75,
              "line": 10,
              "offset": 362,
            },
            "inputId": 0,
            "start": Object {
              "column": 61,
              "line": 10,
              "offset": 347,
            },
          },
          "type": "decl",
          "value": "{color3}",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
<input class={ \`\${(value > 100) ? 'foo' : 'bar'}\`  } style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 61,
          "line": 10,
          "offset": 347,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 81,
              "line": 11,
              "offset": 446,
            },
            "inputId": 0,
            "start": Object {
              "column": 67,
              "line": 11,
              "offset": 431,
            },
          },
          "type": "decl",
          "value": "{color4}",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
<input class={ {foo: (value > 100) ? 'foo' : 'bar'}.foo  } style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 67,
          "line": 11,
          "offset": 431,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
	",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 12,
                  "line": 15,
                  "offset": 478,
                },
                "inputId": 0,
                "start": Object {
                  "column": 2,
                  "line": 15,
                  "offset": 467,
                },
              },
              "type": "decl",
              "value": "red",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": true,
          },
          "selector": "input",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 16,
              "offset": 480,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 14,
              "offset": 458,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "\\">

<style>
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 17,
          "offset": 481,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 14,
          "offset": 458,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests complex.astro ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "color: #00;",
      "file": "/complex.astro",
      "hasBOM": false,
    },
    Object {
      "css": "---
let value, input, style, bar
const foo = 100 <input &&( style=\\"color: #ff;\\" )&& bar > 42
---

<input class={\`\${value > 100 ? 'over-100' : ''}\`} style=\\"color: #00;\\" />
",
      "file": "/complex.astro",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 68,
              "line": 6,
              "offset": 166,
            },
            "inputId": 0,
            "start": Object {
              "column": 58,
              "line": 6,
              "offset": 155,
            },
          },
          "type": "decl",
          "value": "#00",
        },
      ],
      "raws": Object {
        "after": "",
        "codeAfter": "\\" />
",
        "codeBefore": "---
let value, input, style, bar
const foo = 100 <input &&( style=\\"color: #ff;\\" )&& bar > 42
---

<input class={\`\${value > 100 ? 'over-100' : ''}\`} style=\\"",
        "semicolon": true,
      },
      "source": Object {
        "end": Object {
          "column": 69,
          "line": 6,
          "offset": 166,
        },
        "inputId": 0,
        "start": Object {
          "column": 58,
          "line": 6,
          "offset": 155,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests empty-tags.html ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "",
      "file": "/empty-tags.html",
      "hasBOM": false,
    },
    Object {
      "css": "",
      "file": "/empty-tags.html",
      "hasBOM": false,
    },
    Object {
      "css": "<style></style>
<style></style>
",
      "file": "/empty-tags.html",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [],
      "raws": Object {
        "after": "",
        "codeBefore": "<style>",
      },
      "source": Object {
        "end": Object {
          "column": 8,
          "line": 1,
          "offset": 7,
        },
        "inputId": 0,
        "start": Object {
          "column": 8,
          "line": 1,
          "offset": 7,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [],
      "raws": Object {
        "after": "",
        "codeAfter": "</style>
",
        "codeBefore": "</style>
<style>",
      },
      "source": Object {
        "end": Object {
          "column": 8,
          "line": 2,
          "offset": 23,
        },
        "inputId": 0,
        "start": Object {
          "column": 8,
          "line": 2,
          "offset": 23,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests frontmatter.astro ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "	input {
		color: red;
	}
",
      "file": "/frontmatter.astro",
      "hasBOM": false,
    },
    Object {
      "css": "
---
let color = '#f00';
let value
const foo = '<input style=\\"color: blue;\\">'
---

<style>
	input {
		color: red;
	}
</style>
",
      "file": "/frontmatter.astro",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
		",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 13,
                  "line": 10,
                  "offset": 113,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 10,
                  "offset": 102,
                },
              },
              "type": "decl",
              "value": "red",
            },
          ],
          "raws": Object {
            "after": "
	",
            "before": "	",
            "between": " ",
            "semicolon": true,
          },
          "selector": "input",
          "source": Object {
            "end": Object {
              "column": 2,
              "line": 11,
              "offset": 116,
            },
            "inputId": 0,
            "start": Object {
              "column": 2,
              "line": 9,
              "offset": 92,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "
---
let color = '#f00';
let value
const foo = '<input style=\\"color: blue;\\">'
---

<style>
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 12,
          "offset": 117,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 9,
          "offset": 91,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests ignore-comment.vue ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "color: blue",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": "color: green",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": "color: white",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": "color: brack",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": "color: yellow",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": ".b {
  color: red;
}
",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": ".c {
  color: red;
}
",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
    Object {
      "css": "<template>
  <div>
    <!--postcss-ignore-->
    <div style=\\"color: red\\">
      <div style=\\"color: blue\\">
      </div>
    </div>
    <!--postcss-ignore-->
    <input>
    <div style=\\"color: green\\">
    </div>
    <!--postcss-ignore-->
    <div></div>
    <div style=\\"color: white\\">
    </div>
    <div><!--postcss-ignore--></div>
    <div style=\\"color: brack\\">
    </div>
    <!--postcss-ignore--><!--foo-->
    <div style=\\"color: yellow\\">
    </div>
  </div>
</template>

<!--postcss-ignore-->
<style>
a {
  color: red;
}
</style>

<style>
.b {
  color: red;
}
</style>

<!--postcss-ignore-->
<script lang=\\"ts\\">
</script>

<style>
.c {
  color: red;
}
</style>
",
      "file": "/ignore-comment.vue",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 29,
              "line": 5,
              "offset": 103,
            },
            "inputId": 0,
            "start": Object {
              "column": 19,
              "line": 5,
              "offset": 92,
            },
          },
          "type": "decl",
          "value": "blue",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "<template>
  <div>
    <!--postcss-ignore-->
    <div style=\\"color: red\\">
      <div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 30,
          "line": 5,
          "offset": 103,
        },
        "inputId": 0,
        "start": Object {
          "column": 19,
          "line": 5,
          "offset": 92,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 28,
              "line": 10,
              "offset": 196,
            },
            "inputId": 0,
            "start": Object {
              "column": 17,
              "line": 10,
              "offset": 184,
            },
          },
          "type": "decl",
          "value": "green",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
      </div>
    </div>
    <!--postcss-ignore-->
    <input>
    <div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 29,
          "line": 10,
          "offset": 196,
        },
        "inputId": 0,
        "start": Object {
          "column": 17,
          "line": 10,
          "offset": 184,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 28,
              "line": 14,
              "offset": 280,
            },
            "inputId": 0,
            "start": Object {
              "column": 17,
              "line": 14,
              "offset": 268,
            },
          },
          "type": "decl",
          "value": "white",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
    </div>
    <!--postcss-ignore-->
    <div></div>
    <div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 29,
          "line": 14,
          "offset": 280,
        },
        "inputId": 0,
        "start": Object {
          "column": 17,
          "line": 14,
          "offset": 268,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 28,
              "line": 17,
              "offset": 359,
            },
            "inputId": 0,
            "start": Object {
              "column": 17,
              "line": 17,
              "offset": 347,
            },
          },
          "type": "decl",
          "value": "brack",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
    </div>
    <div><!--postcss-ignore--></div>
    <div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 29,
          "line": 17,
          "offset": 359,
        },
        "inputId": 0,
        "start": Object {
          "column": 17,
          "line": 17,
          "offset": 347,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 29,
              "line": 20,
              "offset": 438,
            },
            "inputId": 0,
            "start": Object {
              "column": 17,
              "line": 20,
              "offset": 425,
            },
          },
          "type": "decl",
          "value": "yellow",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\">
    </div>
    <!--postcss-ignore--><!--foo-->
    <div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 30,
          "line": 20,
          "offset": 438,
        },
        "inputId": 0,
        "start": Object {
          "column": 17,
          "line": 20,
          "offset": 425,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 13,
                  "line": 34,
                  "offset": 560,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 34,
                  "offset": 549,
                },
              },
              "type": "decl",
              "value": "red",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".b",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 35,
              "offset": 562,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 33,
              "offset": 542,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeBefore": "\\">
    </div>
  </div>
</template>

<!--postcss-ignore-->
<style>
a {
  color: red;
}
</style>

<style>
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 36,
          "offset": 563,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 33,
          "offset": 542,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 13,
                  "line": 44,
                  "offset": 651,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 44,
                  "offset": 640,
                },
              },
              "type": "decl",
              "value": "red",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".c",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 45,
              "offset": 653,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 43,
              "offset": 633,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "</style>

<!--postcss-ignore-->
<script lang=\\"ts\\">
</script>

<style>
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 46,
          "offset": 654,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 43,
          "offset": 633,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests lang-postcss.vue ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "a {
a {
color: red
}
}
",
      "file": "/lang-postcss.vue",
      "hasBOM": false,
    },
    Object {
      "css": "<template>
</template>
<style lang=\\"postcss\\">
a {
a {
color: red
}
}
</style>
",
      "file": "/lang-postcss.vue",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "indexes": Object {},
              "lastEach": 1,
              "nodes": Array [
                Object {
                  "prop": "color",
                  "raws": Object {
                    "before": "
",
                    "between": ": ",
                  },
                  "source": Object {
                    "end": Object {
                      "column": 10,
                      "line": 6,
                      "offset": 64,
                    },
                    "inputId": 0,
                    "start": Object {
                      "column": 1,
                      "line": 6,
                      "offset": 54,
                    },
                  },
                  "type": "decl",
                  "value": "red",
                },
              ],
              "raws": Object {
                "after": "
",
                "before": "
",
                "between": " ",
                "semicolon": false,
              },
              "selector": "a",
              "source": Object {
                "end": Object {
                  "column": 1,
                  "line": 7,
                  "offset": 66,
                },
                "inputId": 0,
                "start": Object {
                  "column": 1,
                  "line": 5,
                  "offset": 50,
                },
              },
              "type": "rule",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": false,
          },
          "selector": "a",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 8,
              "offset": 68,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 4,
              "offset": 46,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "<template>
</template>
<style lang=\\"postcss\\">
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 9,
          "offset": 69,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 4,
          "offset": 46,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests test.astro ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "color: red;",
      "file": "/test.astro",
      "hasBOM": false,
    },
    Object {
      "css": "color: green;",
      "file": "/test.astro",
      "hasBOM": false,
    },
    Object {
      "css": "input {
	color: red;
}
",
      "file": "/test.astro",
      "hasBOM": false,
    },
    Object {
      "css": "---
let color = '#f00';
let value
const foo = '<input style=\\"color: blue;\\">'
---

<input class={value > 100 ? 'over-100' : ''} style=\\"color: red;\\" />
<input class={  ((value > 100) )   ? 'over-100' : ''} style=\\"color: green;\\" />

<style>
input {
	color: red;
}
</style>
",
      "file": "/test.astro",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 63,
              "line": 7,
              "offset": 145,
            },
            "inputId": 0,
            "start": Object {
              "column": 53,
              "line": 7,
              "offset": 134,
            },
          },
          "type": "decl",
          "value": "red",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "---
let color = '#f00';
let value
const foo = '<input style=\\"color: blue;\\">'
---

<input class={value > 100 ? 'over-100' : ''} style=\\"",
        "semicolon": true,
      },
      "source": Object {
        "end": Object {
          "column": 64,
          "line": 7,
          "offset": 145,
        },
        "inputId": 0,
        "start": Object {
          "column": 53,
          "line": 7,
          "offset": 134,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 74,
              "line": 8,
              "offset": 224,
            },
            "inputId": 0,
            "start": Object {
              "column": 62,
              "line": 8,
              "offset": 211,
            },
          },
          "type": "decl",
          "value": "green",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "\\" />
<input class={  ((value > 100) )   ? 'over-100' : ''} style=\\"",
        "semicolon": true,
      },
      "source": Object {
        "end": Object {
          "column": 75,
          "line": 8,
          "offset": 224,
        },
        "inputId": 0,
        "start": Object {
          "column": 62,
          "line": 8,
          "offset": 211,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
	",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 12,
                  "line": 12,
                  "offset": 258,
                },
                "inputId": 0,
                "start": Object {
                  "column": 2,
                  "line": 12,
                  "offset": 247,
                },
              },
              "type": "decl",
              "value": "red",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": true,
          },
          "selector": "input",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 13,
              "offset": 260,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 11,
              "offset": 238,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "\\" />

<style>
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 14,
          "offset": 261,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 11,
          "offset": 238,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests test.html ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "			a {
				display: flex;
			}
",
      "file": "/test.html",
      "hasBOM": false,
    },
    Object {
      "css": "font-family: serif serif",
      "file": "/test.html",
      "hasBOM": false,
    },
    Object {
      "css": "<!DOCTYPE html>
<html>
	<head>
		<style type=\\"text/css\\">
			a {
				display: flex;
			}
		</style>
	</head>
	<body>
		<div style=\\"font-family: serif serif\\"></div>
	</body>
</html>
",
      "file": "/test.html",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "display",
              "raws": Object {
                "before": "
				",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 18,
                  "line": 6,
                  "offset": 82,
                },
                "inputId": 0,
                "start": Object {
                  "column": 5,
                  "line": 6,
                  "offset": 68,
                },
              },
              "type": "decl",
              "value": "flex",
            },
          ],
          "raws": Object {
            "after": "
			",
            "before": "			",
            "between": " ",
            "semicolon": true,
          },
          "selector": "a",
          "source": Object {
            "end": Object {
              "column": 4,
              "line": 7,
              "offset": 87,
            },
            "inputId": 0,
            "start": Object {
              "column": 4,
              "line": 5,
              "offset": 60,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeBefore": "<!DOCTYPE html>
<html>
	<head>
		<style type=\\"text/css\\">
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 8,
          "offset": 88,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 5,
          "offset": 57,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "font-family",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 38,
              "line": 11,
              "offset": 154,
            },
            "inputId": 0,
            "start": Object {
              "column": 15,
              "line": 11,
              "offset": 130,
            },
          },
          "type": "decl",
          "value": "serif serif",
        },
      ],
      "raws": Object {
        "after": "",
        "codeAfter": "\\"></div>
	</body>
</html>
",
        "codeBefore": "		</style>
	</head>
	<body>
		<div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 39,
          "line": 11,
          "offset": 154,
        },
        "inputId": 0,
        "start": Object {
          "column": 15,
          "line": 11,
          "offset": 130,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests test.svelte ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "color: {color}; --opacity: {bgOpacity};",
      "file": "/test.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "color: {color}",
      "file": "/test.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "<script>
	let bgOpacity = 0.5;
	$: color = bgOpacity < 0.6 ? '#000' : '#fff';
</script>
<p style=\\"color: {color}; --opacity: {bgOpacity};\\">This is a paragraph.</p>
<p style=\\"color: {color}\\">This is a paragraph.</p>
",
      "file": "/test.svelte",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 25,
              "line": 5,
              "offset": 113,
            },
            "inputId": 0,
            "start": Object {
              "column": 11,
              "line": 5,
              "offset": 98,
            },
          },
          "type": "decl",
          "value": "{color}",
        },
        Object {
          "prop": "--opacity",
          "raws": Object {
            "before": " ",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 49,
              "line": 5,
              "offset": 137,
            },
            "inputId": 0,
            "start": Object {
              "column": 27,
              "line": 5,
              "offset": 114,
            },
          },
          "type": "decl",
          "value": "{bgOpacity}",
        },
      ],
      "raws": Object {
        "after": "",
        "codeBefore": "<script>
	let bgOpacity = 0.5;
	$: color = bgOpacity < 0.6 ? '#000' : '#fff';
</script>
<p style=\\"",
        "semicolon": true,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 11,
          "line": 5,
          "offset": 98,
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 24,
              "line": 6,
              "offset": 188,
            },
            "inputId": 0,
            "start": Object {
              "column": 11,
              "line": 6,
              "offset": 174,
            },
          },
          "type": "decl",
          "value": "{color}",
        },
      ],
      "raws": Object {
        "after": "",
        "codeAfter": "\\">This is a paragraph.</p>
",
        "codeBefore": "\\">This is a paragraph.</p>
<p style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 11,
          "line": 6,
          "offset": 174,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests test.vue ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
      "file": "/test.vue",
      "hasBOM": false,
    },
    Object {
      "css": "<template>
  <input v-model=\\"inputValue\\" />
  <button @click=\\"handleClick\\" class=\\"add-button\\">Add ToDo</button>
  <ul class=\\"todo-list\\">
    <li
      v-for=\\"(todo, index) in todoItems\\"
      :key=\\"todo.id\\"
      class=\\"todo-item\\"
      :class=\\"{ 'todo-item--done': todo.done }\\"
      @click=\\"todo.done = !todo.done\\"
    >
      <span v-if=\\"todo.done\\">✓</span> {{ todo.text }}
    </li>
  </ul>
</template>
<script setup>
import { ref, computed } from \\"vue\\"
const inputValue = ref(\\"\\")
const todoItems = ref([])

function handleClick() {
  todoItems.value.push({
    id: Math.random().toString(36).slice(-8),
    done: false,
    text: inputValue.value,
  })
  inputValue.value = \\"\\"
}

const buttonColor = computed(() => (inputValue ? \\"black\\" : \\"white\\"));
const buttonPointerEvents = computed(() =>
  inputValue.value ? \\"initial\\" : \\"none\\"
);
</script>
<style>
.add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
</style>
",
      "file": "/test.vue",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 29,
                  "line": 37,
                  "offset": 902,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 37,
                  "offset": 875,
                },
              },
              "type": "decl",
              "value": "v-bind(buttonColor)",
            },
            Object {
              "prop": "pointer-events",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 60,
                  "line": 38,
                  "offset": 963,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 38,
                  "offset": 905,
                },
              },
              "type": "decl",
              "value": "v-bind(\\"inputValue ? 'initial' : 'none'\\")",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".add-button",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 39,
              "offset": 965,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 36,
              "offset": 859,
            },
          },
          "type": "rule",
        },
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "list-style",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 19,
                  "line": 41,
                  "offset": 998,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 41,
                  "offset": 981,
                },
              },
              "type": "decl",
              "value": "none",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "
",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".todo-list",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 42,
              "offset": 1000,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 40,
              "offset": 966,
            },
          },
          "type": "rule",
        },
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "background-color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 25,
                  "line": 44,
                  "offset": 1039,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 44,
                  "offset": 1016,
                },
              },
              "type": "decl",
              "value": "#eef",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "
",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".todo-item",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 45,
              "offset": 1041,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 43,
              "offset": 1001,
            },
          },
          "type": "rule",
        },
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "background-color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 28,
                  "line": 47,
                  "offset": 1089,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 47,
                  "offset": 1063,
                },
              },
              "type": "decl",
              "value": "#3fb983",
            },
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 14,
                  "line": 48,
                  "offset": 1104,
                },
                "inputId": 0,
                "start": Object {
                  "column": 3,
                  "line": 48,
                  "offset": 1092,
                },
              },
              "type": "decl",
              "value": "#fff",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "
",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".todo-item--done",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 49,
              "offset": 1106,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 46,
              "offset": 1042,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "<template>
  <input v-model=\\"inputValue\\" />
  <button @click=\\"handleClick\\" class=\\"add-button\\">Add ToDo</button>
  <ul class=\\"todo-list\\">
    <li
      v-for=\\"(todo, index) in todoItems\\"
      :key=\\"todo.id\\"
      class=\\"todo-item\\"
      :class=\\"{ 'todo-item--done': todo.done }\\"
      @click=\\"todo.done = !todo.done\\"
    >
      <span v-if=\\"todo.done\\">✓</span> {{ todo.text }}
    </li>
  </ul>
</template>
<script setup>
import { ref, computed } from \\"vue\\"
const inputValue = ref(\\"\\")
const todoItems = ref([])

function handleClick() {
  todoItems.value.push({
    id: Math.random().toString(36).slice(-8),
    done: false,
    text: inputValue.value,
  })
  inputValue.value = \\"\\"
}

const buttonColor = computed(() => (inputValue ? \\"black\\" : \\"white\\"));
const buttonPointerEvents = computed(() =>
  inputValue.value ? \\"initial\\" : \\"none\\"
);
</script>
<style>
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 50,
          "offset": 1107,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 36,
          "offset": 859,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests test2.svelte ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "color: {color}; {styleOpacity}",
      "file": "/test2.svelte",
      "hasBOM": false,
    },
    Object {
      "css": "<script>
	let bgOpacity = 0.5;
	$: color = bgOpacity < 0.6 ? '#000' : '#fff';
	$: styleOpacity = \`--opacity: \${bgOpacity};\`
</script>
<p style=\\"color: {color}; {styleOpacity}\\">This is a paragraph.</p>
",
      "file": "/test2.svelte",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "color",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 25,
              "line": 6,
              "offset": 159,
            },
            "inputId": 0,
            "start": Object {
              "column": 11,
              "line": 6,
              "offset": 144,
            },
          },
          "type": "decl",
          "value": "{color}",
        },
      ],
      "raws": Object {
        "after": " {styleOpacity}",
        "codeAfter": "\\">This is a paragraph.</p>
",
        "codeBefore": "<script>
	let bgOpacity = 0.5;
	$: color = bgOpacity < 0.6 ? '#000' : '#fff';
	$: styleOpacity = \`--opacity: \${bgOpacity};\`
</script>
<p style=\\"",
        "semicolon": true,
      },
      "source": Object {
        "end": undefined,
        "inputId": 0,
        "start": Object {
          "column": 11,
          "line": 6,
          "offset": 144,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;

exports[`AST tests unknown-lang.vue ast 1`] = `
Object {
  "inputs": Array [
    Object {
      "css": "a {}
",
      "file": "/unknown-lang.vue",
      "hasBOM": false,
    },
    Object {
      "css": "<template>
</template>
<script setup>
</script>
<style lang=\\"unknown\\">
unknown////
</style>
<style lang=\\"css\\">
a {}
</style>
",
      "file": "/unknown-lang.vue",
      "hasBOM": false,
    },
  ],
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [],
          "raws": Object {
            "after": "",
            "before": "",
            "between": " ",
          },
          "selector": "a",
          "source": Object {
            "end": Object {
              "column": 4,
              "line": 9,
              "offset": 115,
            },
            "inputId": 0,
            "start": Object {
              "column": 1,
              "line": 9,
              "offset": 111,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "codeAfter": "</style>
",
        "codeBefore": "<template>
</template>
<script setup>
</script>
<style lang=\\"unknown\\">
unknown////
</style>
<style lang=\\"css\\">
",
        "semicolon": false,
      },
      "source": Object {
        "end": Object {
          "column": 1,
          "line": 10,
          "offset": 116,
        },
        "inputId": 0,
        "start": Object {
          "column": 1,
          "line": 9,
          "offset": 111,
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {},
  "source": Object {
    "end": undefined,
    "inputId": 0,
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "document",
}
`;
