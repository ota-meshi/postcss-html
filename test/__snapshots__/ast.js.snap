// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST tests test.html ast 1`] = `
Object {
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "display",
              "raws": Object {
                "before": "
				",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 18,
                  "line": 6,
                },
                "input": Input {
                  "css": "			a {
				display: flex;
			}
",
                  "file": "/test.html",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 5,
                  "line": 6,
                },
              },
              "type": "decl",
              "value": "flex",
            },
          ],
          "raws": Object {
            "after": "
			",
            "before": "			",
            "between": " ",
            "semicolon": true,
          },
          "selector": "a",
          "source": Object {
            "end": Object {
              "column": 4,
              "line": 7,
            },
            "input": Input {
              "css": "			a {
				display: flex;
			}
",
              "file": "/test.html",
              "hasBOM": false,
            },
            "start": Object {
              "column": 4,
              "line": 5,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "beforeStart": "<!DOCTYPE html>
<html>
	<head>
		<style type=\\"text/css\\">
",
        "semicolon": false,
      },
      "source": Object {
        "inline": false,
        "input": Input {
          "css": "			a {
				display: flex;
			}
",
          "file": "/test.html",
          "hasBOM": false,
        },
        "lang": "css",
        "start": Object {
          "column": 1,
          "line": 5,
        },
        "syntax": Object {
          "parse": [Function],
          "stringify": [Function],
        },
      },
      "type": "root",
    },
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "prop": "font-family",
          "raws": Object {
            "before": "",
            "between": ": ",
          },
          "source": Object {
            "end": Object {
              "column": 38,
              "line": 11,
            },
            "input": Input {
              "css": "font-family: serif serif",
              "file": "/test.html",
              "hasBOM": false,
            },
            "start": Object {
              "column": 15,
              "line": 11,
            },
          },
          "type": "decl",
          "value": "serif serif",
        },
      ],
      "raws": Object {
        "after": "",
        "beforeStart": "		</style>
	</head>
	<body>
		<div style=\\"",
        "semicolon": false,
      },
      "source": Object {
        "inline": true,
        "input": Input {
          "css": "font-family: serif serif",
          "file": "/test.html",
          "hasBOM": false,
        },
        "lang": "css",
        "start": Object {
          "column": 15,
          "line": 11,
        },
        "syntax": Object {
          "parse": [Function],
          "stringify": [Function],
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {
    "afterEnd": "\\"></div>
	</body>
</html>
",
  },
  "source": Object {
    "input": Input {
      "css": "<!DOCTYPE html>
<html>
	<head>
		<style type=\\"text/css\\">
			a {
				display: flex;
			}
		</style>
	</head>
	<body>
		<div style=\\"font-family: serif serif\\"></div>
	</body>
</html>
",
      "file": "/test.html",
      "hasBOM": false,
    },
    "lang": "html",
    "opts": Object {
      "from": "/test.html",
      "syntax": [Function],
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "root",
}
`;

exports[`AST tests test.vue ast 1`] = `
Object {
  "nodes": Array [
    Object {
      "document": "$document",
      "indexes": Object {},
      "lastEach": 1,
      "nodes": Array [
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 29,
                  "line": 37,
                },
                "input": Input {
                  "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
                  "file": "/test.vue",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 3,
                  "line": 37,
                },
              },
              "type": "decl",
              "value": "v-bind(buttonColor)",
            },
            Object {
              "prop": "pointer-events",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 60,
                  "line": 38,
                },
                "input": Input {
                  "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
                  "file": "/test.vue",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 3,
                  "line": 38,
                },
              },
              "type": "decl",
              "value": "v-bind(\\"inputValue ? 'initial' : 'none'\\")",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".add-button",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 39,
            },
            "input": Input {
              "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
              "file": "/test.vue",
              "hasBOM": false,
            },
            "start": Object {
              "column": 1,
              "line": 36,
            },
          },
          "type": "rule",
        },
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "list-style",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 19,
                  "line": 41,
                },
                "input": Input {
                  "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
                  "file": "/test.vue",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 3,
                  "line": 41,
                },
              },
              "type": "decl",
              "value": "none",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "
",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".todo-list",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 42,
            },
            "input": Input {
              "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
              "file": "/test.vue",
              "hasBOM": false,
            },
            "start": Object {
              "column": 1,
              "line": 40,
            },
          },
          "type": "rule",
        },
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "background-color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 25,
                  "line": 44,
                },
                "input": Input {
                  "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
                  "file": "/test.vue",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 3,
                  "line": 44,
                },
              },
              "type": "decl",
              "value": "#eef",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "
",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".todo-item",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 45,
            },
            "input": Input {
              "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
              "file": "/test.vue",
              "hasBOM": false,
            },
            "start": Object {
              "column": 1,
              "line": 43,
            },
          },
          "type": "rule",
        },
        Object {
          "indexes": Object {},
          "lastEach": 1,
          "nodes": Array [
            Object {
              "prop": "background-color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 28,
                  "line": 47,
                },
                "input": Input {
                  "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
                  "file": "/test.vue",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 3,
                  "line": 47,
                },
              },
              "type": "decl",
              "value": "#3fb983",
            },
            Object {
              "prop": "color",
              "raws": Object {
                "before": "
  ",
                "between": ": ",
              },
              "source": Object {
                "end": Object {
                  "column": 14,
                  "line": 48,
                },
                "input": Input {
                  "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
                  "file": "/test.vue",
                  "hasBOM": false,
                },
                "start": Object {
                  "column": 3,
                  "line": 48,
                },
              },
              "type": "decl",
              "value": "#fff",
            },
          ],
          "raws": Object {
            "after": "
",
            "before": "
",
            "between": " ",
            "semicolon": true,
          },
          "selector": ".todo-item--done",
          "source": Object {
            "end": Object {
              "column": 1,
              "line": 49,
            },
            "input": Input {
              "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
              "file": "/test.vue",
              "hasBOM": false,
            },
            "start": Object {
              "column": 1,
              "line": 46,
            },
          },
          "type": "rule",
        },
      ],
      "raws": Object {
        "after": "
",
        "beforeStart": "<template>
  <input v-model=\\"inputValue\\" />
  <button @click=\\"handleClick\\" class=\\"add-button\\">Add ToDo</button>
  <ul class=\\"todo-list\\">
    <li
      v-for=\\"(todo, index) in todoItems\\"
      :key=\\"todo.id\\"
      class=\\"todo-item\\"
      :class=\\"{ 'todo-item--done': todo.done }\\"
      @click=\\"todo.done = !todo.done\\"
    >
      <span v-if=\\"todo.done\\">✓</span> {{ todo.text }}
    </li>
  </ul>
</template>
<script setup>
import { ref, computed } from \\"vue\\"
const inputValue = ref(\\"\\")
const todoItems = ref([])

function handleClick() {
  todoItems.value.push({
    id: Math.random().toString(36).slice(-8),
    done: false,
    text: inputValue.value,
  })
  inputValue.value = \\"\\"
}

const buttonColor = computed(() => (inputValue ? \\"black\\" : \\"white\\"));
const buttonPointerEvents = computed(() =>
  inputValue.value ? \\"initial\\" : \\"none\\"
);
</script>
<style>
",
        "semicolon": false,
      },
      "source": Object {
        "inline": false,
        "input": Input {
          "css": ".add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
",
          "file": "/test.vue",
          "hasBOM": false,
        },
        "lang": "css",
        "start": Object {
          "column": 1,
          "line": 36,
        },
        "syntax": Object {
          "parse": [Function],
          "stringify": [Function],
        },
      },
      "type": "root",
    },
  ],
  "raws": Object {
    "afterEnd": "</style>
",
  },
  "source": Object {
    "input": Input {
      "css": "<template>
  <input v-model=\\"inputValue\\" />
  <button @click=\\"handleClick\\" class=\\"add-button\\">Add ToDo</button>
  <ul class=\\"todo-list\\">
    <li
      v-for=\\"(todo, index) in todoItems\\"
      :key=\\"todo.id\\"
      class=\\"todo-item\\"
      :class=\\"{ 'todo-item--done': todo.done }\\"
      @click=\\"todo.done = !todo.done\\"
    >
      <span v-if=\\"todo.done\\">✓</span> {{ todo.text }}
    </li>
  </ul>
</template>
<script setup>
import { ref, computed } from \\"vue\\"
const inputValue = ref(\\"\\")
const todoItems = ref([])

function handleClick() {
  todoItems.value.push({
    id: Math.random().toString(36).slice(-8),
    done: false,
    text: inputValue.value,
  })
  inputValue.value = \\"\\"
}

const buttonColor = computed(() => (inputValue ? \\"black\\" : \\"white\\"));
const buttonPointerEvents = computed(() =>
  inputValue.value ? \\"initial\\" : \\"none\\"
);
</script>
<style>
.add-button {
  color: v-bind(buttonColor);
  pointer-events: v-bind(\\"inputValue ? 'initial' : 'none'\\");
}
.todo-list {
  list-style: none;
}
.todo-item {
  background-color: #eef;
}
.todo-item--done {
  background-color: #3fb983;
  color: #fff;
}
</style>
",
      "file": "/test.vue",
      "hasBOM": false,
    },
    "lang": "html",
    "opts": Object {
      "from": "/test.vue",
      "syntax": [Function],
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "type": "root",
}
`;
